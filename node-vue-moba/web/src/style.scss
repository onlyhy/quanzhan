// reset
* {
    // 以边框为准，比如加Padding就不会把自己撑大，而是对内容进行挤压
    box-sizing: border-box;
    // tab时不要有高亮之类的
    outline: none;
}

// 保证只有这里的px,其他地方用rem
html {
    // 基础字体大小
    font-size: 13px;
}

body {
    margin: 0;
    // Arial,苹果字体，非衬线字体
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}

a {
    color: #999;
}

// colors变量，定义键值对
$colors:("primary":#db9e3f,
    // 若是会因命名冲突，最好用引号引起来
    "white":#fff,
    "light":#f9f9f9,
    "grey":#999,
    "dark-1":#343440,
    "dark":#222,
    "black":#000,

);

@each $colorKey,
$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        color: $color;
    }
}

// text align
// css里的循环
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}

// font size
$base-font-size:1rem;
// 利用px to rem 扩展工具换算，只留倍数，不加rem单位
$font-sizes:(xs:0.7692, //10px
    sm:0.9231, //12px
    md:1, //13px
    lg:1.0769, //14px
    xl:1.2308 //16px
);

@each $sizeKey,
$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

// flex
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

// 主轴
// justify content
$flex-jc:(start: flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around);

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

// 交叉轴
// align items
$flex-ai:(start: flex-start,
    end:flex-end,
    center:center,
    stretch:stretch);

@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

.flex-grow-1 {
    flex-grow: 1;
}

// spacing
// 0-5
// .mt-1 => margin top 1级.pb-2 => padding bottom 2级
$spacing-types:(m:margin, p:padding);
$spacing-directions:(t:top, r:right, b:bottom, l:left);
// 基础空间尺寸单位
$spacing-base-size:1rem;
$spacing-sizes:(0:0, 1:0.25, 2:0.5, 3:1, 4:1.5, 5:3);

@each $typeKey,
$type in $spacing-types {

    //.m-1
    @each $sizeKey,
    $size in $spacing-sizes {

        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }


    @each $sizeKey,
    $size in $spacing-sizes {

        // .mx-1 水平方向
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }

        // .my-1 垂直方向
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }

    }

    //.mt-1{margin-top: 0.25rem;}
    @each $directionKey,
    $direction in $spacing-directions {

        @each $sizeKey,
        $size in $spacing-sizes {

            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }
}